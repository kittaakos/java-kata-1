/*
 * This file was generated by the Gradle 'init' task.
 */

plugins {
    id 'java-library'
    id 'application'
}

apply plugin : 'java'
apply from: "${rootDir}/gradle/versions.gradle"

repositories {
    mavenLocal()
    maven {
        url = uri('https://repo.maven.apache.org/maven2/')
    }
    maven {
        name 'sonatype'
        url 'https://oss.sonatype.org/content/repositories/releases'
    }
}

dependencies {
    implementation "com.google.guava:guava:${versions.guava}"
    implementation "org.eclipse.platform:org.eclipse.swt:${versions.swt}"
    implementation "org.eclipse.platform:org.eclipse.jface:${versions.jface}"

    testImplementation 'org.junit.platform:junit-platform-launcher:1.6.2'
    testImplementation 'org.junit.jupiter:junit-jupiter-engine:5.6.2'
    testImplementation 'org.junit.vintage:junit-vintage-engine:5.6.2'
}

sourceSets {
    main {
        java.srcDirs = ['src/main/java']
        resources.srcDirs = ['src/main/resources']
    }
    test {
        java.srcDirs = ['src/test/java']
        resources.srcDirs = ['src/test/resources']
    }
}

group = 'org.echocat.kata'
version = '1-SNAPSHOT'
description = 'java-kata-1'
java.sourceCompatibility = JavaVersion.VERSION_1_8

ext {
   javaMainClass = 'org.echocat.kata.java.part1.MainApp'
}

application {
    mainClassName = javaMainClass
}

run {
    jvmArgs '-XstartOnFirstThread'
}

// Shamelessly stolen and modified to be able to remap `osgi.platform` to the proper SWT executable.
// Unlike Tycho, Gradle cannot resolve `osgi.platform`.
// Source: https://stackoverflow.com/questions/62057321/using-swt-in-gradle-could-not-resolve-all-dependencies
configurations.all {
    resolutionStrategy {
        dependencySubstitution {
            def os = System.getProperty('os.name').toLowerCase()
            if (os.contains('windows')) {
                substitute module('org.eclipse.platform:org.eclipse.swt.${osgi.platform}') with module("org.eclipse.platform:org.eclipse.swt.win32.win32.x86_64:${versions.swt}")
            } else if (os.contains('linux')) {
                substitute module('org.eclipse.platform:org.eclipse.swt.${osgi.platform}') with module("org.eclipse.platform:org.eclipse.swt.gtk.linux.x86_64:${versions.swt}")
            } else if (os.contains('mac')) {
                substitute module('org.eclipse.platform:org.eclipse.swt.${osgi.platform}') with module("org.eclipse.platform:org.eclipse.swt.cocoa.macosx.x86_64:${versions.swt}")
            }
        }
    }
}
tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}
